<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Canvas学习笔记</title>
    <link href="/2022/07/30/canvas-learning/"/>
    <url>/2022/07/30/canvas-learning/</url>
    
    <content type="html"><![CDATA[<h1 id="Canvas-学习笔记"><a href="#Canvas-学习笔记" class="headerlink" title="Canvas 学习笔记"></a>Canvas 学习笔记</h1><blockquote><p><strong>Canvas</strong>是前端图形化学习的一个重点课题，学好canvas能够从底层更好的理解图形化方面的前端知识，为后续的 <strong>Web3D</strong> 方向的学习打下良好的基础</p><p>在接下来的时间里，我会通过阅读《HTML5 Canvas核心技术 之 图形、动画与游戏开发》这本书来进行Canvas的学习，按照笔者的思路进行代码实践，并将学习中的收获记录出来</p></blockquote><p>你可以通过我的<a href="https://mengxun1437.github.io/2022/07/30/canvas-learning/">个人博客</a>或者此项目的<a href="https://github.com/mengxun1437/canvas-learning/wiki">Wiki文档</a>进行查看</p><h2 id="2022-07"><a href="#2022-07" class="headerlink" title="2022-07"></a>2022-07</h2><h3 id="2022-07-30"><a href="#2022-07-30" class="headerlink" title="2022-07-30"></a>2022-07-30</h3><ul><li>简单例子入门了解</li></ul><p>先贴代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html">index.html<br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;keywords&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>A Simple Canvas Example<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">background</span>: <span class="hljs-number">#dddddd</span>;</span><br><span class="language-css">      &#125;</span><br><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-id">#canvas</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffffff</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border</span>: thin inset <span class="hljs-number">#aaaaaa</span>;</span><br><span class="language-css">      &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span> Canvas not supported <span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;index.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js">index.<span class="hljs-property">js</span><br><br><span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;canvas&quot;</span>);<br><span class="hljs-keyword">const</span> context = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br><br><span class="hljs-comment">// 设置字体</span><br>context.<span class="hljs-property">font</span> = <span class="hljs-string">&quot;38pt Arial&quot;</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * fillText 使用fillStyle来填充文本中的字符</span><br><span class="hljs-comment"> * strokeText 使用strokeStyle来描绘字符的轮廓线</span><br><span class="hljs-comment"> * fillStyle和strokeStyle可以是Css格式的颜色、渐变色或者是图案</span><br><span class="hljs-comment"> * fillText和strokeText的3个变量分别是 1.文本 2.文本横坐标 3.文本纵坐标</span><br><span class="hljs-comment"> */</span><br>context.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">&quot;cornflowerblue&quot;</span>;<br>context.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;blue&quot;</span>;<br>context.<span class="hljs-title function_">fillText</span>(<br>  <span class="hljs-string">&quot;Hello Canvas&quot;</span>,<br>  canvas.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> - <span class="hljs-number">150</span>,<br>  canvas.<span class="hljs-property">height</span> / <span class="hljs-number">2</span> + <span class="hljs-number">15</span><br>);<br>context.<span class="hljs-title function_">strokeText</span>(<br>  <span class="hljs-string">&quot;Hello Canvas&quot;</span>,<br>  canvas.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> - <span class="hljs-number">150</span>,<br>  canvas.<span class="hljs-property">height</span> / <span class="hljs-number">2</span> + <span class="hljs-number">15</span><br>);<br><br></code></pre></td></tr></table></figure><p>通过示例代码，我们可以绘制出如下图所示的Canvas图像</p><p><img src="https://mengxun.obs.cn-east-3.myhuaweicloud.com/image/share/202207302202164.png" alt="代码样例效果图"></p><p>注释掉fillText和strokeText的代码可以很容易发现它们的作用</p><p><img src="https://mengxun.obs.cn-east-3.myhuaweicloud.com/image/share/202207302202804.png" alt="注释掉fillText的效果"></p><p><img src="https://mengxun.obs.cn-east-3.myhuaweicloud.com/image/share/202207302203850.png" alt="注释掉strokeText的效果"></p><p>通过这个例子可以发现Canvas有着有趣且丰富的API提供给开发者，看到图像被绘制在浏览器上的那一刻，是不是有辣么一点激动？那么也开始你的Canvas学习之旅吧</p><ul><li>Canvas元素的宽高</li></ul><p>canvas元素的默认宽高是300*150个屏幕像素，可以通过指定canvas元素上的width和height属性来改变canvas元素的宽高，也可以通过css来改变宽高，但是这两者有区别。</p><p>canvas元素有两套尺寸，一个是元素本身的大小，一个是元素绘图表面的大小。通过css改变的是元素本身的大小，而设置canvas元素的宽高，会同时改变元素的本身大小和元素绘图表面的大小。</p><p>如果使用css来修改canvas元素的宽高，元素的绘图表面大小和元素大小可能不符合，那么浏览器会对元素的绘图表面进行缩放，来使之符合前者，这样会导致比较奇怪的效果出现。</p><h2 id="2022-08"><a href="#2022-08" class="headerlink" title="2022-08"></a>2022-08</h2><h3 id="2022-08-29"><a href="#2022-08-29" class="headerlink" title="2022-08-29"></a>2022-08-29</h3><p>时隔一个月，我还是回来了。。。今天阅读的是第二章《绘制》,简单记录一下</p><ul><li><p>坐标系统</p><p>默认情况,canvas的左上角为坐标原点,但是可以通过 <strong>平移(translate)</strong> <strong>旋转(rotate)</strong> <strong>缩放(scale)</strong> 来对坐标系进行自定义的变化</p></li><li><p>canvas绘制图像的步骤</p><ul><li><p>将图形或者图像绘制到一个无限大的透明位图里面,绘制时候遵循当前<strong>描边模式</strong> <strong>填充模式</strong> <strong>线条样式</strong></p><ul><li>如果有阴影效果<ul><li>将图形或者图像的阴影绘制到另一个位图中,在绘制时候遵循当前绘图环境的<strong>阴影设定</strong></li><li>将阴影中每一个像素的alpha分量乘以绘图环境的globalAlpha属性值</li><li>将绘有阴影的位图与经过剪辑区域剪过的canvas进行图像合成(使用当前的合成模式的参数)</li></ul></li></ul></li><li><p>将图形或图像的每一个像素的颜色分量乘以绘图环境的globalAlpha属性值</p></li><li><p>将绘有图形或图像的位图,合成到当前经过剪辑区域剪切过的canvas位图之上(操作时候采用当前的合成操作符)</p><p><img src="https://mengxun.obs.cn-east-3.myhuaweicloud.com/image/share/202208292254912.png" alt="canvas绘制过程"></p></li></ul></li><li><p>矩形的绘制</p><p> 方法 method(x,y,w,h)</p><ul><li><p>clearRect 清除</p></li><li><p>strokeRect 描边</p></li><li><p>fillRect 填充</p><p>操作受到绘图环境变量的影响,比如说在绘制前指定<code>lineJoin = &#39;round&#39;</code> 和 <code>lineWidth</code>可以对矩阵的边角样式和描边的宽度造成影响</p></li></ul></li><li><p>颜色和透明度</p><ul><li><p>stokeStyle</p></li><li><p>fillStyle</p><p>颜色值: <code>RGB</code> <code>RGBA</code> <code>HSLA</code> <code>HEX</code> <code>颜色名</code></p></li></ul></li><li><p>渐变色与图案</p><ul><li><p>渐变</p><ul><li>线性渐变 linear &#x3D;&gt; <code>createLinearGradient(x,y)</code> &#x3D;&gt; <code>addColorStop(double x,string color)</code></li><li>放射 radial <code>createRadialGradient(x,y)</code> &#x3D;&gt; <code>addColorStop(double x,string color)</code></li></ul></li><li><p>图案</p><ul><li>图案元素类型:<code>image</code> <code>canvas</code> <code>video</code></li><li>创建方法 <code>createPattern(HTMLImageElement | HTMLCanvasElement | HTMLVideoElement image, DOMString repetition)</code> 第一个参数指定图案所用的图案元素来源,第二个参数取值范围<code>repeat</code> <code>repeat-x</code> <code>repeat-y</code> <code>no-repeat</code>指定了如何重复使用这个图案</li></ul></li></ul></li><li><p>阴影</p><ul><li><p>通过这四个值来进行阴影设置</p><ul><li><code>shadowColor</code>  CSS3格式的颜色</li><li><code>shadowOffsetX</code> 阴影的水平像素偏移</li><li><code>shadowOffsetY</code> 阴影的垂直像素偏移</li><li><code>shadowBlur</code>  一个与像素无关的值,用在高斯模糊的方程中,对阴影进行模糊处理</li></ul></li><li><p>使用阴影的条件</p><ul><li>shadowColor的值不是全透明的</li><li>其余三个属性中,存在一个非0的值</li></ul></li><li><p>内嵌阴影</p><ul><li>shadowOffsetX 和 shadowOffsetY设置为负偏移量可以达到内嵌阴影的效果</li></ul></li><li><p>性能相关</p><ul><li><p>前面说到,阴影会先渲染到一个辅助位图中,最后这个位图中的内容和屏幕上的canvas图像进行合成,使用了辅助的位图,绘制阴影可能是一项耗时的操作</p><p>如果只是绘制一些简单的图形,大可不必使用阴影效果来增加性能负担</p></li></ul></li></ul></li><li><p>路径,填充和描边</p><ul><li><p>stokeRect,fillRect这是立即绘制的,还有一些复杂的图形,比如贝塞尔曲线等都是基于路径的</p></li><li><p>大多数绘制系统都是基于路径的,比如SVG系统,苹果的Cocoa框架以及Adobe Illustrator等.</p></li><li><p>使用步骤</p><ul><li><code>lineWidth</code> 等描边和填充属性</li><li><code>beginPath()</code> 开始一段新的路径</li><li><code>rect()</code>和<code>arc()</code>方法用于创建矩形和弧形的路径</li><li><code>stoke()</code>和<code>fill</code>方法,对路径进行描边和填充</li><li><code>closePath</code> rect方法所创建的路径是封闭的,而arc方法创建的圆弧路径则不封闭,要封闭某个路径,需要调用closePath()方法</li></ul></li><li><p>路径与子路径</p><ul><li><p>canvas之中只有一条路径存在,Canvas规范将其称为”当前路径”(current path), 但是这条路径却可以包含许多子路径(subpath).</p><p>而子路径,又是由两个或更多的点组成的</p></li><li><p>beginPath会清除前面的子路径的绘制结果</p></li><li><p>如果连续调用<code>rect =&gt; stoke =&gt; rect =&gt; stoke</code> 那么第二次绘制的时候也会对第一次的结果造成影响</p></li></ul></li><li><p><strong>非零环绕规则</strong></p><ul><li><p>当前路径是循环的或者包含多个相交的子路径,那么canvas的绘图环境变量就必须要判断,<code>fill()</code>方法使用的时候,如何对当前路径进行填充.</p></li><li><p>如何判断由自我交叉的路径?</p><ul><li><p>对于路径中的任意给定区域,从该区域内部画一条足够长的线段,使此线段的终点完全落在路径范围之外</p></li><li><p>将计数器初始化为0,然后,每当这条线段与路径上的直线或者曲线相交时,就改变计数器的值</p><ul><li>如果线段与路径的顺时针部分相交,那么<code>+1</code></li><li>如果线段与路径的逆时针部分相交,那么<code>-1</code></li></ul></li><li><p>如果计数器的最终值不是0,那么此区域就不再路径内部,调用<code>fill()</code>时候,浏览器就不会对其进行填充,反之,填充</p><p><img src="https://mengxun.obs.cn-east-3.myhuaweicloud.com/image/share/202208300025385.png" alt="非零环绕规则"></p></li></ul></li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>图形化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>canvas</tag>
      
      <tag>图形化</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
